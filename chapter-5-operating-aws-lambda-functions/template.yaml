AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  This SAM template creates the following resources for a sample application:
    1) Lambda function for the staging environment.
    2) Lambda function for the production environment.
    3) IAM role for Lambda execution.
    4) Lambda function URLs for both environments.
    5) SSM parameters for resource data.

Globals:
  Function:
    Runtime: python3.10
    Timeout: 30
    MemorySize: 128
    Architectures:
      - x86_64

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/project/staging/resource_data
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/project/production/resource_data

  StagingParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /project/staging/resource_data
      Type: String
      Value: STAGING_00
      Description: Resource data for staging environment

  ProductionParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /project/production/resource_data
      Type: String
      Value: PRODUCTION_01
      Description: Resource data for production environment

  StagingFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-staging
      CodeUri: ./src/
      Handler: app.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          ENVIRONMENT: STAGING
          VERSION: 0
          PLATFORM: SAM
          BUILD_NUMBER: 0
          PARAMETER_NAME: /project/staging/resource_data
      FunctionUrlConfig:
        AuthType: NONE

  ProductionFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-production
      CodeUri: ./src/
      Handler: app.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          ENVIRONMENT: PRODUCTION
          VERSION: 0
          PLATFORM: SAM
          BUILD_NUMBER: 0
          PARAMETER_NAME: /project/production/resource_data
      FunctionUrlConfig:
        AuthType: NONE

Outputs:
  StagingFunctionName:
    Description: The name of the Lambda function for the staging environment
    Value: !Ref StagingFunction

  ProductionFunctionName:
    Description: The name of the Lambda function for the production environment
    Value: !Ref ProductionFunction